{"version":3,"sources":["webpack:///./src/app/settings/setting.service.ts","webpack:///./src/app/settings/settings-routing.module.ts","webpack:///./src/app/settings/settings.component.html","webpack:///./src/app/settings/settings.component.scss","webpack:///./src/app/settings/settings.component.ts","webpack:///./src/app/settings/settings.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAqC;AACS;AACI;AACP;AAK3C;IACI,wBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAE,CAAC;IAEvC,mCAAU,GAAV;QACQ,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,uDAAQ,CAAC,UAAU,GAAC,uDAAQ,CAAC,OAAO,GAAC,UAAU,CAAC;aACpE,IAAI,CACD,0DAAG,CAAC,UAAC,IAAa;YACd,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC,CAAC,CAEL;IACT,CAAC;IAXQ,cAAc;QAH1B,gEAAU,CAAC;YACR,UAAU,EAAC,MAAM;SACpB,CAAC;yCAE4B,+DAAU;OAD3B,cAAc,CAc1B;IAAD,qBAAC;CAAA;AAd0B;;;;;;;;;;;;;;;;;;;;;;;;ACRc;AACc;AACE;AAGzD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACP,SAAS,EAAE,qEAAiB;QAC7B,IAAI,EAAE;YACJ,KAAK,EAAE,UAAU;SAClB;KAEF;CACF,CAAC;AAMF;IAAA;IAAqC,CAAC;IAAzB,qBAAqB;QAJjC,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,qBAAqB,CAAI;IAAD,4BAAC;CAAA;AAAJ;;;;;;;;;;;;ACpBlC,w/F;;;;;;;;;;;ACAA,mB;;;;;;;;;;;;;;;;;;;;;;;;;;ACAoE;AACjB;AACD;AAOlD;IAKE,2BAAoB,cAA8B;QAAlD,iBAcE;QAdkB,mBAAc,GAAd,cAAc,CAAgB;QAEhD,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE;aAC/B,SAAS,CAAC,cAAI;YACb,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,OAAO,CAAC;YACzB,KAAI,CAAC,WAAW,CAAC,UAAU,CAAC;gBAE1B,YAAY,EAAC,KAAI,CAAC,OAAO,CAAC,UAAU;gBACpC,WAAW,EAAC,KAAI,CAAC,OAAO,CAAC,SAAS;aAEnC,CAAC;QAEJ,CAAC,CAAC;IACH,CAAC;IAEF,oCAAQ,GAAR;QAEE,IAAI,CAAC,WAAW,GAAG,IAAI,wDAAS,CAAC;YAC/B,YAAY,EAAC,IAAI,0DAAW,CAAC,IAAI,EAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACxD,WAAW,EAAC,IAAI,0DAAW,CAAC,IAAI,EAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SACxD,CAAC;IAEJ,CAAC;IAED,uCAAW,GAAX;QACE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;QACnC,KAAK,CAAC,YAAY,CAAC;IACrB,CAAC;IAjCU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCAMoC,+DAAc;OALvC,iBAAiB,CAoC7B;IAAD,wBAAC;CAAA;AApC6B;;;;;;;;;;;;;;;;;;;;;;;;;;ACTW;AACM;AACU;AACS;AACD;AAajE;IAAA;IAA8B,CAAC;IAAlB,cAAc;QAX1B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,8EAAqB;gBACrB,kEAAmB;gBACnB,0DAAW;aACZ;YACD,YAAY,EAAE;gBACZ,qEAAiB;aAClB;SACF,CAAC;OACW,cAAc,CAAI;IAAD,qBAAC;CAAA;AAAJ","file":"settings-settings-module.js","sourcesContent":["import { map } from 'rxjs/operators';\nimport { HttpURIs } from './../app.constants';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from \"@angular/core\";\n\n@Injectable({\n    providedIn:'root'\n})\nexport class SettingService{\n    constructor(private http: HttpClient){}\n\n    getSetting(){\n            return this.http.get(HttpURIs.baseDomain+HttpURIs.baseApi+'settings')\n            .pipe(\n                map((data:Response) =>{\n                    return data;\n                })\n\n            )\n    }\n\n\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SettingsComponent } from './settings.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n     component: SettingsComponent,\n    data: {\n      title: 'Settings'\n    },\n    \n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SettingsRoutingModule { }","module.exports = \"<!-- <div class=\\\"row\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">\\n        <h4 class=\\\"card-title\\\" id=\\\"from-actions-bottom-right\\\">Settings</h4>\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"px-3\\\">\\n          <form>\\n            <div class=\\\"form-body\\\">\\n              <h4 class=\\\"form-section\\\">\\n                <i class=\\\"ft-info\\\"></i>User Info</h4>\\n\\n              <div class=\\\"row\\\">\\n                <div class=\\\"form-group col-md-4 offset-1 mb-2\\\">\\n                  <label for=\\\"userinput1\\\">Bucket Name</label>\\n                  <input type=\\\"text\\\" id=\\\"\\\" class=\\\"form-control border-primary\\\" \\n                  placeholder=\\\"First Name\\\" name=\\\"bucketName\\\" \\n                  [(ngModel)]=\\\"setting.bucketName\\\">\\n                </div>\\n              </div>\\n\\n\\n              <div class=\\\"row\\\">\\n                <div class=\\\"form-group col-md-4 offset-1 mb-2\\\">\\n                  <label for=\\\"userinput1\\\">Bucket URL</label>\\n                  <input type=\\\"text\\\" id=\\\"\\\" class=\\\"form-control border-primary\\\" \\n                   placeholder=\\\"First Name\\\" name=\\\"bucketURL\\\" \\n                   [(ngModel)]=\\\"setting.bucketURL\\\">\\n                </div>\\n              </div>\\n\\n\\n              </div>\\n          </form>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div> -->\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <h4 class=\\\"card-title\\\" id=\\\"from-actions-bottom-right\\\">Settings</h4>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"px-3\\\">\\n            <form [formGroup]=\\\"settingForm\\\" (ngSubmit)=\\\"saveSetting()\\\">\\n              <div class=\\\"form-body\\\">\\n                <h4 class=\\\"form-section\\\">\\n                  <i class=\\\"ft-info\\\"></i>Setting Info</h4>\\n  \\n                <div class=\\\"row\\\">\\n                  <div class=\\\"form-group col-md-4 offset-1 mb-2\\\">\\n                    <label for=\\\"userinput1\\\">Bucket Name</label>\\n                    <input type=\\\"text\\\" id=\\\"\\\" class=\\\"form-control border-primary\\\" \\n                    placeholder=\\\"Bucket Name\\\" name=\\\"bucketName\\\" \\n                    formControlName =\\\"bucketName\\\">\\n                  </div>\\n                </div>\\n  \\n  \\n                <div class=\\\"row\\\">\\n                  <div class=\\\"form-group col-md-4 offset-1 mb-2\\\">\\n                    <label for=\\\"userinput1\\\">Bucket URL</label>\\n                    <input type=\\\"text\\\" id=\\\"\\\" class=\\\"form-control border-primary\\\" \\n                     placeholder=\\\"First Name\\\" name=\\\"bucketURL\\\" \\n                     formControlName=\\\"bucketUrl\\\">\\n                  </div>\\n                </div>\\n  \\n  \\n                </div>\\n\\n                <input type=\\\"submit\\\"\\n                value=\\\"submit\\\"\\n                class=\\\"btn btn-primary\\\">\\n            </form>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\"","module.exports = \"\"","import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { SettingService } from './setting.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent implements OnInit {\n\n  public setting:any;\n  public settingForm: FormGroup\n\n  constructor(private settingService: SettingService) {\n    \n    this.settingService.getSetting()\n    .subscribe(data =>{\n      this.setting = data;\n      console.log(this.setting)\n      this.settingForm.patchValue({\n\n        'bucketName':this.setting.bucketName,\n        'bucketUrl':this.setting.bucketURL\n\n      })\n  \n    })\n   }\n\n  ngOnInit() {\n\n    this.settingForm = new FormGroup({\n      'bucketName':new FormControl(null,[Validators.required]),\n      'bucketUrl':new FormControl(null,[Validators.required]),\n    })\n  \n  }\n\n  saveSetting(){\n    console.log(this.settingForm.value)\n    alert(\"sb clicked\")\n  }\n  \n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SettingsComponent } from './settings.component';\nimport { SettingsRoutingModule } from './settings-routing.module';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms'\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SettingsRoutingModule,\n    ReactiveFormsModule,\n    FormsModule\n  ],\n  declarations: [\n    SettingsComponent\n  ]\n})\nexport class SettingsModule { }"],"sourceRoot":""}